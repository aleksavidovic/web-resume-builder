"""Add many-to-may relationships to BuiltResume

Revision ID: 183dc359ae03
Revises: e9a266987aa9
Create Date: 2025-09-30 09:28:38.766414

"""
from alembic import op
import sqlalchemy as sa
import resume_builder


# revision identifiers, used by Alembic.
revision = '183dc359ae03'
down_revision = 'e9a266987aa9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('built_resume_education',
    sa.Column('built_resume_id', resume_builder.models.GUID(), nullable=False),
    sa.Column('education_id', resume_builder.models.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['built_resume_id'], ['built_resume.id'], ),
    sa.ForeignKeyConstraint(['education_id'], ['education.id'], ),
    sa.PrimaryKeyConstraint('built_resume_id', 'education_id')
    )
    op.create_table('built_resume_experience',
    sa.Column('built_resume_id', resume_builder.models.GUID(), nullable=False),
    sa.Column('experience_id', resume_builder.models.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['built_resume_id'], ['built_resume.id'], ),
    sa.ForeignKeyConstraint(['experience_id'], ['experience.id'], ),
    sa.PrimaryKeyConstraint('built_resume_id', 'experience_id')
    )
    op.create_table('built_resume_language',
    sa.Column('built_resume_id', resume_builder.models.GUID(), nullable=False),
    sa.Column('language_id', resume_builder.models.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['built_resume_id'], ['built_resume.id'], ),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.PrimaryKeyConstraint('built_resume_id', 'language_id')
    )
    op.create_table('built_resume_skills',
    sa.Column('built_resume_id', resume_builder.models.GUID(), nullable=False),
    sa.Column('skills_id', resume_builder.models.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['built_resume_id'], ['built_resume.id'], ),
    sa.ForeignKeyConstraint(['skills_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('built_resume_id', 'skills_id')
    )
    with op.batch_alter_table('built_resume', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('_user_experience_title_uc'), type_='unique')
        batch_op.create_unique_constraint('_user_built_resumes_title_uc', ['user_id', 'entry_title'])

    with op.batch_alter_table('education', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('_user_experience_title_uc'), type_='unique')
        batch_op.create_unique_constraint('_user_education_title_uc', ['user_id', 'entry_title'])

    with op.batch_alter_table('language', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('_user_experience_title_uc'), type_='unique')
        batch_op.create_unique_constraint('_user_language_title_uc', ['user_id', 'entry_title'])

    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('_user_experience_title_uc'), type_='unique')
        batch_op.create_unique_constraint('_user_skills_title_uc', ['user_id', 'entry_title'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.drop_constraint('_user_skills_title_uc', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('_user_experience_title_uc'), ['user_id', 'entry_title'])

    with op.batch_alter_table('language', schema=None) as batch_op:
        batch_op.drop_constraint('_user_language_title_uc', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('_user_experience_title_uc'), ['user_id', 'entry_title'])

    with op.batch_alter_table('education', schema=None) as batch_op:
        batch_op.drop_constraint('_user_education_title_uc', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('_user_experience_title_uc'), ['user_id', 'entry_title'])

    with op.batch_alter_table('built_resume', schema=None) as batch_op:
        batch_op.drop_constraint('_user_built_resumes_title_uc', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('_user_experience_title_uc'), ['user_id', 'entry_title'])

    op.drop_table('built_resume_skills')
    op.drop_table('built_resume_language')
    op.drop_table('built_resume_experience')
    op.drop_table('built_resume_education')
    # ### end Alembic commands ###
